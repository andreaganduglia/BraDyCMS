<div id="{{ uid }}">
  <h1>Welcome to BraDyCMS</h1>
  <div class="row">
    <div class="col-sm-8 content">
    <p>This document sums up some basic concept about how BraDyCMS works, how you can organize articles, menus and how to forat your URLs in order to get a beautiful and functional web site.</p>

    <p>More detailed documentation, about specific aspects, howtos and similar can be found in the <code>Documentation</code> item of the main menu.</p>

    <h3><a href="#nt-1"></a>KISS principle</h3>
    <p><a href="http://en.wikipedia.org/wiki/KISS_principle" target="_blank">Keep it simple, stupid</a> is the basic principle that moved us towards the development of this CMS.</p>
    <p>We wanted to create a simple to use, yet versatile CMS, that we could use in various our projects, and than we shared our work on <a href="https://github.com/jbogdani/BraDyCMS/" target="_blank">Github</a>, making BraDyCMS an open source project.</p>
    <p>Our principal aim was to get have a powerful tool for content managing with a easy way to organize the content and to display (template system) to public. That's why we say that <strong>BraDypCMS is a designer-oriented CMS</strong>.</p>
    <p> The creation of a simple web site or of a big web portal passes through 3 steps:</p>
    <ol>
      <li>Add and organize some content</li>
      <li>Add some menus</li>
      <li>Design a template to present your content to other people</li>
    </ol>
    <p class="lead">That's all BradyCMS does!</p>

    
    <hr />
    <h3>Adding and managin content</h3>
    <p>All content is organized in <code>articles</code>. Articles are organized using tags. No sections, no categories, just tags! tags a far more elastic way to keep your content organized.</p>
    <p>It's up to you to design the structure of your data, and you can build liquid or static categories and sections just using tags. Which category belongs to which section? Nested categories? No need for this, tags can make a single article can belong to many categories and/or section.</p>
    <p>Article <code>apple</code> can be tagged with tags <code>fruit</code>, <code>food</code>, <code>edible</code>, <code>tasty</code>; it means it belongs to all this categories and you don't need subcategories. If you need to display all articles of subcategory <code>edible</code> of category<code>fruit</code> just search for all articles having both tags <code>fruit</code> and <code>edible</code>!</p>
    
    <p>Each article has the following fields:</p>
    <ul>
      <li>Title: this will be used for page HTML title tag</li>
      <li>Text ID: this is the UNIQUE name of your article. Keep this simple and meaningfull: it will be also the URL of the article</li>
      <li>Sorting: custom sorting for list views</li>
      <li>Keywords: this will be used for page HTML keywords tag</li>
      <li>Author: This can be useful in many cases</li>
      <li>Is published: you can save drafts and publish in a second moment using this flag</li>
      <li>Creation date: This also be useful in many cases</li>
      <li>Publishing date: If you want to automatically schedule the publishing of the article</li>
      <li>Expiration date: If you want to automatically schedule the expiration date of your content</li>
      <li>Summary: This will be used for the page HTML description tag. Can be usefull also in list view</li>
      <li>Text: Finally, the article main content</li>
    </ul>
    
    
    <hr />
    <h3>Article images</h3>
    <p>Very often we need to have a specific image linked to an article. And we want to use it in different sizes, for different purposes (slideshows, thumbnails, big images, etc). We know it can be very time consuming to prepare manually all the images in the various sizes, and then upload, mantain in folders, think of different filenames or filename patterns.</p>
    <p>BraDyCMS simplifies all this. Uploading, resizing in different sizes, organizing in folders is as easy as dragging an image from your computer to the article's edit form. Add all the image sizes you want to have for each article in the <a href="#cfg/edit" target="_blank">site configuration module</a>. Drag and drop images in the right part of the article edit form! Images will be named with the article <code>ID</code> (not text id) and will have the <code>jpg</code> extension. BradyCMS will create the folder system for you.</p>
    <p>For example, if you have defined thre sizes fuor your article images, 600x300, 450x225 and 200x100, and you upload an image for the article with ID 5, your images will be available at the following paths:</p>
    <ul>
      <li>./sites/default/images/articles/600x300/5.jpg</li>
      <li>./sites/default/images/articles/450x225/5.jpg</li>
      <li>./sites/default/images/articles/200x100/5.jpg</li>
    </ul>
    
    
    <hr />
    <h3>Media > images</h3>
    <p>BraDyCMS has a built in system for loading, organizing and editing images. You can load images and files, create folders, delete, and edit them using a GUI interface.</p>
    <p>You can copy, move, convert in multiple formats, resize and crop images easily and safely.</p>
    
    
    <hr />
    <h3>Media > galleries</h3>
    <p>Photo galleries are awsome! That's why we have built an easy to use tool to upload files with a simple drag&drop, create thumbnails with a click, add and translate caption, ecc. You can then easily embedd your galleries in articles body by using a simple fast tag <code>[[gallery]]here_galley_name[[/gallery]]</code> (<a href="#docs/read/faq">click to learn mode</a>).</p>
    
    
    
    <hr />
    <h3>Menu</h3>
    <p>You can have all the menus you need, and translate them in several languages. You can also nest menu items in multiple levels. And you do not need difficult code to do this: just drag & drop menu items to reorder or nest them. You can find more on how to create menu in the <a href="#docs/read/faq">FAQ section</a> of the documentation.</p>
    
    
    <hr />
    <h3>URL and linking system</h3>
    <p>Retriving articles from the database to use in the templates is simple! BraDyCMS has two methods that you can use to build meaningfull (and search engines friendly) URLs. Let's suppose http://mysite.ext it the URL of your installation:</p>
    <ul>
      <li>to get a single article just add append the article's text id to your URL:
        <p><code>http://mysite.ext/myfirstarticle</code></p>
      </li>
      <li>to get a list of articles use tags; one or more tags can be used simultaneously in the URL and, don't forget,use the <code>.all</code> extention to tell the CMS you are using tags:
        <p><code>http://mysite.ext/tag1.all</code>: will retrieve all articles tagged with tag <strong>tag1</strong></p>
        <p><code>http://mysite.ext/tag1-tag2-tag3.all</code>: will retrieve all articles tagged with <strong>all</strong> listed (hyphen separated) tags <strong>tag1</strong>, <strong>tag3</strong>, <strong>tag3</strong></p>
        <p><code>http://mysite.ext/tag1~tag2~tag3.all</code>: will retrieve all articles tagged with <strong>any</strong> of the listed (tilde separated) tags <strong>tag1</strong>, <strong>tag3</strong>, <strong>tag3</strong></p>
      </li>
    </ul>
    
    <p>This way, if you want to show all web related news of year 2013, just tag the articles with all these tags (news, 2013, web) and use this URL: <code>http://mysite.ext/news-2013-web.all</code></p>
    
    <p>Learn more on menu and URL in the <a href="#docs/read/faq">FAQ section</a> of the documentation.</p>
    
    
    <hr />
    <h3>Almost finished...</h3>
    <p>Please read all docs to learn how to translate articles and menu items, translate BraDyCMS admin control panel in your language, Create and use beautiful user forms, author plugins and extend functionality and report all problems you may encounter on <a href="https://github.com/jbogdani/BraDyCMS/issues" target="_blank">Github</a></p>
    
    </div>

    <div class="col-sm-4">
      <ul class="menu nav nav-list" style="position: fixed"></ul>
    </div>
    
  </div>
</div>

<script>
$('#{{ uid }} .content h3').each(function(i, el){
  var li = $('<li><a href="javascript:void(0)">' + $(el).text() + '</a></li>').on('click', function(){
    $(document).scrollTop( $(el).offset().top - 50 );
  });
	$('#{{ uid }} ul.menu').append(li);
});

</script>
